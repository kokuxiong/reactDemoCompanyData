[{"E:\\companyERP\\src\\hooks\\useCommon.js":"1","E:\\companyERP\\src\\components\\Login.js":"2","E:\\companyERP\\src\\components\\MyApp.js":"3","E:\\companyERP\\src\\components\\NavBar.js":"4","E:\\companyERP\\src\\components\\List.js":"5","E:\\companyERP\\src\\components\\RegisterUpdate.js":"6","E:\\companyERP\\src\\index.js":"7","E:\\companyERP\\src\\components\\Infomation.js":"8","E:\\companyERP\\src\\services\\util.js":"9","E:\\companyERP\\src\\App.js":"10","E:\\companyERP\\src\\services\\empinfoDAO.js":"11","E:\\companyERP\\src\\services\\loginuserDAO.js":"12","E:\\companyERP\\src\\components\\LoginUserRegister.js":"13","E:\\companyERP\\src\\i18n.js":"14","E:\\companyERP\\src\\services\\countryDAO.js":"15"},{"size":4471,"mtime":1608981957165,"results":"16","hashOfConfig":"17"},{"size":7727,"mtime":1609325657717,"results":"18","hashOfConfig":"17"},{"size":8180,"mtime":1609394856978,"results":"19","hashOfConfig":"17"},{"size":1552,"mtime":1609393304387,"results":"20","hashOfConfig":"17"},{"size":4988,"mtime":1609392858821,"results":"21","hashOfConfig":"17"},{"size":13954,"mtime":1609392897329,"results":"22","hashOfConfig":"17"},{"size":210,"mtime":1609243384606,"results":"23","hashOfConfig":"17"},{"size":3895,"mtime":1609392822868,"results":"24","hashOfConfig":"17"},{"size":943,"mtime":1608890053650,"results":"25","hashOfConfig":"17"},{"size":304,"mtime":1609244103545,"results":"26","hashOfConfig":"17"},{"size":1896,"mtime":1608890040041,"results":"27","hashOfConfig":"17"},{"size":2085,"mtime":1608890047156,"results":"28","hashOfConfig":"17"},{"size":7250,"mtime":1609325749215,"results":"29","hashOfConfig":"17"},{"size":811,"mtime":1609243369031,"results":"30","hashOfConfig":"17"},{"size":353,"mtime":1609324266788,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"18360cf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\companyERP\\src\\hooks\\useCommon.js",["68","69"],"import {useEffect, useState} from 'react'\r\nimport {insertEmpinfo, findAllEmpinfo, findByCmpCd, updateEmpinfo, deleteByCmpCd } from '../services/empinfoDAO'\r\nimport { insertLoginuser, findByAccId } from '../services/loginuserDAO'\r\n\r\nexport default　function useCommon(opt){\r\n\r\n    //社員情報リスト\r\n    const [emplist, setEmplist] = useState([])\r\n\r\n    //初期化処理\r\n    useEffect(() => {\r\n        //すべての社員情報を検索する\r\n        if(opt != false){ //optがfalseの場合、社員情報検索しない、じゃないとuseCommonを呼び出すたびに検索処理が実行される\r\n            findAllEmpinfo((data) => {\r\n                //検索成功の場合、stateを更新\r\n                setEmplist(data)\r\n                //テスト用\r\n                console.log(data)\r\n            })\r\n        }\r\n    },[]) //一回のみ実行するため、第二パラメータに[]を渡す\r\n\r\n    //社員情報全量検索\r\n    function findAllEmp() {\r\n        findAllEmpinfo((data) => {\r\n            //検索成功の場合、stateを更新\r\n            setEmplist(data)\r\n        })\r\n    }\r\n\r\n    //社員情報新規登録\r\n    function insertEmp(obj, callback){\r\n        //実際の登録処理\r\n        insertEmpinfo(obj, ()=>{\r\n            //登録でき次第、すべてのレコードを再検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n                //callback呼び出す\r\n                callback()\r\n            })\r\n        })\r\n    }\r\n\r\n    //社員cmpCdにより、社員情報を検索する\r\n    function findEmpByCmpCd(cmpCd, callback){\r\n        //実際の検索処理\r\n        findByCmpCd(cmpCd, (data)=>{\r\n            //検索結果をcallbackとして返却\r\n            callback(data)\r\n        })\r\n    }\r\n\r\n    //指定された社員情報（obj）を更新する \r\n    function updateEmp(obj, callback){\r\n        //実際の更新処理\r\n        updateEmpinfo(obj, ()=>{\r\n            //すべてのレコードを検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n                //callback呼び出す\r\n                callback()\r\n            })\r\n        })\r\n    }\r\n\r\n    //指定された社員情報を削除する\r\n    function deleteEmp(obj){\r\n        //実際の削除処理\r\n        deleteByCmpCd(obj, ()=>{\r\n            //すべてのレコードを検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    //社員番号すでに存在してるかをチェックする\r\n    function doCheckDoubleEmp(cmpCd) {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"doCheckDoubleEmp\")\r\n            //実際の検索処理\r\n            findByCmpCd(cmpCd, (data)=>{\r\n                console.log(\"data.name\" + data.name)\r\n                //検索結果返却\r\n                data.name ? resolve(true) : resolve(false)\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    //ログインユーザのaccountIdにより、ログインユーザを検索する\r\n    //ログイン処理ユーザチェック用\r\n    function findLoginuserByAccId(accId, callback) {\r\n        findByAccId(accId, (data) => {\r\n            //検索結果をcallbackとして返却\r\n            callback(data)\r\n        })\r\n    }\r\n\r\n    //ログインユーザ新規登録処理\r\n    //insert loginuser\r\n    function loginUserRegister(obj, callback) {\r\n        insertLoginuser(obj,() => {\r\n            callback()\r\n        })\r\n    }\r\n    \r\n    return { \r\n        emplist,                  //社員情報リスト\r\n        setEmplist,               //社員情報リストをstateへ更新\r\n        findAllEmp,               //すべての社員情報を検索する\r\n        insertEmp,                //社員を新規登録する\r\n        findEmpByCmpCd,           //社員コードにより、社員情報を検索する\r\n        updateEmp,                //社員情報を更新する\r\n        deleteEmp,                //社員を削除する\r\n        doCheckDoubleEmp,         //新規登録したい社員コードが既に存在しているかをチェック処理\r\n        loginUserRegister,        //ログインユーザを新規登録したい\r\n        findLoginuserByAccId      //ログインユーザＩＤにより、ログインユーザを検索する \r\n    }\r\n}",["70","71"],"E:\\companyERP\\src\\components\\Login.js",["72","73","74","75"],"E:\\companyERP\\src\\components\\MyApp.js",["76","77","78","79"],"E:\\companyERP\\src\\components\\NavBar.js",[],"E:\\companyERP\\src\\components\\List.js",["80","81","82"],"E:\\companyERP\\src\\components\\RegisterUpdate.js",["83","84","85","86","87","88","89"],"E:\\companyERP\\src\\index.js",[],["90","91"],"E:\\companyERP\\src\\components\\Infomation.js",["92","93"],"E:\\companyERP\\src\\services\\util.js",["94"],"//国マスタ\r\nconst country = [\r\n    {cd: '001', cName: '中国'},\r\n    {cd: '002', cName: '日本'},\r\n    {cd: '003', cName: '韓国'},\r\n]\r\n\r\n//国のcountryCdにより、国名を検索し返却する\r\nfunction getCountryName(countryCd) {\r\n    //検索処理\r\n    let countryTmp = country.find((element) => element.cd == countryCd)\r\n    //検索結果がある場合、国名を返却、それ以外は不明を返却\r\n    return countryTmp ? countryTmp.cName : '不明'\r\n}\r\n\r\n//6桁英数字チェック\r\nfunction doCheck6LetterOrNum(target) {\r\n    var myExpress = \"^[0-9a-zA-Z]{6}$\"; \r\n    var re = new RegExp(myExpress); \r\n    console.log(\"re test\" + re.test(target))\r\n    if (re.test(target)) { \r\n       return true\r\n    }else{ \r\n      return false\r\n    }\r\n}\r\n\r\n//export\r\nexport { \r\n    getCountryName,           //国のcountryCdにより、国名を検索し返却する\r\n    doCheck6LetterOrNum       //6桁英数字チェック \r\n}","E:\\companyERP\\src\\App.js",[],["95","96"],"E:\\companyERP\\src\\services\\empinfoDAO.js",[],"E:\\companyERP\\src\\services\\loginuserDAO.js",[],"E:\\companyERP\\src\\components\\LoginUserRegister.js",["97","98"],"import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Container, Form, FormGroup, Input, Label, Col, Alert } from 'reactstrap'\r\nimport useCommon from '../hooks/useCommon'\r\nimport { doCheck6LetterOrNum } from '../services/util'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n/**\r\n * 当該画面のチェック処理は手動で実現している。勉強になるため、一旦このままにする。\r\n */\r\nexport default function LoginUserRegister(props){\r\n\r\n    //historyを利用し画面遷移する\r\n    let history = useHistory()\r\n    //画面で入力したＩＤとパスワードstate\r\n    const [accountId, setAccountId] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    //画面へエラーメッセージを出すフラグ\r\n    const [visible, setVisible] = useState(false) //ＩＤ必須入力フラグ\r\n    const [visible2, setVisible2] = useState(false) //パスワードに不正ありフラグ\r\n    const [visible2sub, setVisible2sub] = useState(false) //パスワードは未入力かor６桁英数字以外かフラグ\r\n    const [visible3, setVisible3] = useState(false) //ＩＤ存在フラグ\r\n    const [visible4, setVisible4] = useState(false) //登録成功、画面遷移提示フラグ\r\n    const [time3, setTime3] = useState(3) //登録成功の場合、3秒後画面をログインへ遷移する\r\n    //ログインユーザ登録処理と検索処理\r\n    const { loginUserRegister, findLoginuserByAccId } = useCommon(false)\r\n    //i18n処理\r\n    const { t } = useTranslation();\r\n\r\n    //画面で入力したＩＤを随時stateへ\r\n    function updateAccountId(e){\r\n        setAccountId(e.target.value)\r\n        //ＩＤを弄ると、エラーメッセージを消す\r\n        if(visible){\r\n            setVisible(false)\r\n            setVisible2sub(false)\r\n        }\r\n        //ＩＤを弄ると、エラーメッセージを消す\r\n        if(visible3){\r\n            setVisible3(false)\r\n        }\r\n    }\r\n    //画面で入力したパスワードを随時stateへ\r\n    function updatePassword(e){\r\n        setPassword(e.target.value)\r\n        //パスワードを弄ると、エラーメッセージを消す\r\n        if(visible2){\r\n            setVisible2(false)\r\n            setVisible2sub(false)\r\n        }\r\n        //パスワードを弄ると、エラーメッセージを消す\r\n        if(visible3){\r\n            setVisible3(false)\r\n        }\r\n    }\r\n\r\n    //登録処理\r\n    function doRegister(){\r\n        //ＩＤ未入力の場合、エラーメッセージ出す\r\n        if(!accountId){\r\n            // alert(\"accountID must be inputed\")\r\n            setVisible(true)\r\n        }\r\n        //パスワード未入力の場合、エラーメッセージ出す\r\n        if(!password){\r\n            // alert(\"password must be inputed\")\r\n            setVisible2(true)\r\n        }\r\n        //どちらか未入力の場合、なにもしない\r\n        if(!accountId || !password){\r\n            // alert('未入力項目がありますので、ご確認ください。')\r\n            return\r\n        }\r\n        //パスワード６桁英数字チェック、６桁英数字以外の場合、エラーメッセージ出す\r\n        if(!doCheck6LetterOrNum(password)){\r\n            setVisible2(true)\r\n            setVisible2sub(true)\r\n            return\r\n        }\r\n        //ＩＤが重複してるかチェック\r\n        findLoginuserByAccId(accountId, (data) => {\r\n            //ＩＤが重複したら、エラーメッセージ出す\r\n            if(data.accountId == accountId){\r\n                // alert(\"double user\")\r\n                setVisible3(true)\r\n            }else{\r\n                //重複してないなら、登録する\r\n                let tempObj = {}\r\n                tempObj.accountId = accountId\r\n                tempObj.password = password\r\n                loginUserRegister(tempObj, () => {\r\n                    // history.push('/')\r\n                    // alert(\"登録成功です。３秒後ログイン画面へ自動遷移いたします。\")\r\n                    //３秒後遷移するよ　をユーザへ提示するメッセージ出す\r\n                    setVisible4(true)\r\n                    let time = 3\r\n                    let timeCount3 = setInterval(() => {\r\n                        setTime3(time--)\r\n                        if(time == 0){\r\n                            setTimeout(() => {\r\n                                history.push('/')\r\n                                clearInterval(timeCount3)\r\n                            }, 1000);\r\n                        }\r\n                    }, 1000);\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n    <div style={{textAlign:'center'}}>\r\n        <Container>\r\n            <h5 style={{paddingLeft:'auto',paddingRight:270}}>{t('register.title')}</h5><br/><br/>\r\n            <Form >\r\n                <FormGroup row style={{justifyContent: 'center'}}>\r\n                    <Label for=\"username\" sm={2}>{t('register.id')}</Label>\r\n                    <Col sm={4}>\r\n                        <Input type=\"text\" name=\"username\" id=\"username\" \r\n                            onChange={updateAccountId} placeholder={t('register.id-placeholder')}/>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Alert color=\"danger\" isOpen={visible} style={{height:38,paddingTop:5,paddingBottom:0,marginBottom:0}}>\r\n                            {t('login.user-error-required')}\r\n                        </Alert>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row style={{justifyContent: 'center'}}>\r\n                    <Label for=\"password\" sm={2}>{t('register.password')}</Label>\r\n                    <Col sm={4}>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" \r\n                            onChange={updatePassword} placeholder={t('register.password-placeholder')}/>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Alert color=\"danger\" isOpen={visible2} style={{height:38,paddingTop:5,paddingBottom:0,marginBottom:0}}>\r\n                            {visible2sub ? t('login.password-error-6char') : t('login.password-error-required')}\r\n                        </Alert>\r\n                    </Col>\r\n                </FormGroup> \r\n                <FormGroup row style={{justifyContent: 'center'}}>\r\n                    <Col sm={6}>\r\n                        <Alert color=\"danger\" isOpen={visible3} style={{width:350}}>\r\n                            ユーザＩＤは既に存在しています。\r\n                        </Alert>\r\n                        <Alert color=\"danger\" isOpen={visible4} style={{width:350}}>\r\n                            {`${t('register.success1')}${time3}${t('register.success2')}`}\r\n                        </Alert>\r\n                    </Col>\r\n                </FormGroup> \r\n                <br/>\r\n                <FormGroup style={{justifyContent: 'center'}}>\r\n                    <Col sm={10}><Button color=\"primary\" onClick={doRegister} >{t('register.login')}</Button></Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </Container>\r\n    </div>\r\n    )\r\n\r\n}","E:\\companyERP\\src\\i18n.js",[],"E:\\companyERP\\src\\services\\countryDAO.js",[],{"ruleId":"99","severity":1,"message":"100","line":13,"column":16,"nodeType":"101","messageId":"102","endLine":13,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":21,"column":7,"nodeType":"105","endLine":21,"endColumn":9,"suggestions":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":28,"column":16,"nodeType":"113","messageId":"114","endLine":28,"endColumn":20},{"ruleId":"99","severity":1,"message":"115","line":72,"column":39,"nodeType":"101","messageId":"102","endLine":72,"endColumn":41},{"ruleId":"99","severity":1,"message":"115","line":100,"column":43,"nodeType":"101","messageId":"102","endLine":100,"endColumn":45},{"ruleId":"99","severity":1,"message":"115","line":102,"column":46,"nodeType":"101","messageId":"102","endLine":102,"endColumn":48},{"ruleId":"99","severity":1,"message":"115","line":124,"column":22,"nodeType":"101","messageId":"102","endLine":124,"endColumn":24},{"ruleId":"99","severity":1,"message":"115","line":126,"column":25,"nodeType":"101","messageId":"102","endLine":126,"endColumn":27},{"ruleId":"99","severity":1,"message":"115","line":133,"column":22,"nodeType":"101","messageId":"102","endLine":133,"endColumn":24},{"ruleId":"99","severity":1,"message":"115","line":135,"column":25,"nodeType":"101","messageId":"102","endLine":135,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":2,"column":94,"nodeType":"113","messageId":"114","endLine":2,"endColumn":99},{"ruleId":"103","severity":1,"message":"117","line":21,"column":7,"nodeType":"105","endLine":21,"endColumn":9,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"115","line":55,"column":36,"nodeType":"101","messageId":"102","endLine":55,"endColumn":38},{"ruleId":"111","severity":1,"message":"119","line":3,"column":60,"nodeType":"113","messageId":"114","endLine":3,"endColumn":63},{"ruleId":"111","severity":1,"message":"120","line":6,"column":26,"nodeType":"113","messageId":"114","endLine":6,"endColumn":41},{"ruleId":"111","severity":1,"message":"121","line":6,"column":43,"nodeType":"113","messageId":"114","endLine":6,"endColumn":48},{"ruleId":"103","severity":1,"message":"122","line":84,"column":7,"nodeType":"105","endLine":84,"endColumn":9,"suggestions":"123"},{"ruleId":"99","severity":1,"message":"115","line":124,"column":30,"nodeType":"101","messageId":"102","endLine":124,"endColumn":32},{"ruleId":"99","severity":1,"message":"115","line":237,"column":75,"nodeType":"101","messageId":"102","endLine":237,"endColumn":77},{"ruleId":"99","severity":1,"message":"115","line":243,"column":75,"nodeType":"101","messageId":"102","endLine":243,"endColumn":77},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"103","severity":1,"message":"126","line":39,"column":7,"nodeType":"105","endLine":39,"endColumn":9,"suggestions":"127"},{"ruleId":"99","severity":1,"message":"115","line":61,"column":72,"nodeType":"101","messageId":"102","endLine":61,"endColumn":74},{"ruleId":"99","severity":1,"message":"115","line":11,"column":59,"nodeType":"101","messageId":"102","endLine":11,"endColumn":61},{"ruleId":"107","replacedBy":"128"},{"ruleId":"109","replacedBy":"129"},{"ruleId":"99","severity":1,"message":"115","line":83,"column":31,"nodeType":"101","messageId":"102","endLine":83,"endColumn":33},{"ruleId":"99","severity":1,"message":"115","line":99,"column":33,"nodeType":"101","messageId":"102","endLine":99,"endColumn":35},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'opt'. Either include it or remove the dependency array.","ArrayExpression",["130"],"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["133"],"'Col' is defined but never used.","'withTranslation' is defined but never used.","'Trans' is defined but never used.","React Hook useEffect has missing dependencies: 'cmpCd', 'findEmpByCmpCd', 'props', and 'setValue'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],["131"],["132"],"React Hook useEffect has missing dependencies: 'cmpCd', 'findEmpByCmpCd', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["135"],["131"],["132"],{"desc":"136","fix":"137"},"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [opt]",{"range":"144","text":"145"},"Update the dependencies array to be: [props]",{"range":"146","text":"147"},"Update the dependencies array to be: [cmpCd, findEmpByCmpCd, props, setValue]",{"range":"148","text":"149"},"Update the dependencies array to be: [cmpCd, findEmpByCmpCd, props]",{"range":"150","text":"151"},[688,690],"[opt]",[688,690],"[props]",[2679,2681],"[cmpCd, findEmpByCmpCd, props, setValue]",[1359,1361],"[cmpCd, findEmpByCmpCd, props]"]