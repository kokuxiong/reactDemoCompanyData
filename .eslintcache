[{"E:\\companyERP\\src\\hooks\\useCommon.js":"1","E:\\companyERP\\src\\components\\Login.js":"2","E:\\companyERP\\src\\components\\MyApp.js":"3","E:\\companyERP\\src\\components\\NavBar.js":"4","E:\\companyERP\\src\\components\\List.js":"5","E:\\companyERP\\src\\components\\RegisterUpdate.js":"6","E:\\companyERP\\src\\index.js":"7","E:\\companyERP\\src\\components\\Infomation.js":"8","E:\\companyERP\\src\\services\\util.js":"9","E:\\companyERP\\src\\App.js":"10","E:\\companyERP\\src\\services\\empinfoDAO.js":"11","E:\\companyERP\\src\\services\\loginuserDAO.js":"12","E:\\companyERP\\src\\components\\LoginUserRegister.js":"13","E:\\companyERP\\src\\i18n.js":"14"},{"size":4471,"mtime":1608981957165,"results":"15","hashOfConfig":"16"},{"size":7727,"mtime":1609325657717,"results":"17","hashOfConfig":"16"},{"size":6230,"mtime":1609325937886,"results":"18","hashOfConfig":"16"},{"size":1552,"mtime":1609326033175,"results":"19","hashOfConfig":"16"},{"size":4856,"mtime":1609325593990,"results":"20","hashOfConfig":"16"},{"size":13830,"mtime":1609326804414,"results":"21","hashOfConfig":"16"},{"size":210,"mtime":1609243384606,"results":"22","hashOfConfig":"16"},{"size":3805,"mtime":1609325562713,"results":"23","hashOfConfig":"16"},{"size":943,"mtime":1608890053650,"results":"24","hashOfConfig":"16"},{"size":304,"mtime":1609244103545,"results":"25","hashOfConfig":"16"},{"size":1896,"mtime":1608890040041,"results":"26","hashOfConfig":"16"},{"size":2085,"mtime":1608890047156,"results":"27","hashOfConfig":"16"},{"size":7250,"mtime":1609325749215,"results":"28","hashOfConfig":"16"},{"size":811,"mtime":1609243369031,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"18360cf",{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\companyERP\\src\\hooks\\useCommon.js",["62","63"],"import {useEffect, useState} from 'react'\r\nimport {insertEmpinfo, findAllEmpinfo, findByCmpCd, updateEmpinfo, deleteByCmpCd } from '../services/empinfoDAO'\r\nimport { insertLoginuser, findByAccId } from '../services/loginuserDAO'\r\n\r\nexport default　function useCommon(opt){\r\n\r\n    //社員情報リスト\r\n    const [emplist, setEmplist] = useState([])\r\n\r\n    //初期化処理\r\n    useEffect(() => {\r\n        //すべての社員情報を検索する\r\n        if(opt != false){ //optがfalseの場合、社員情報検索しない、じゃないとuseCommonを呼び出すたびに検索処理が実行される\r\n            findAllEmpinfo((data) => {\r\n                //検索成功の場合、stateを更新\r\n                setEmplist(data)\r\n                //テスト用\r\n                console.log(data)\r\n            })\r\n        }\r\n    },[]) //一回のみ実行するため、第二パラメータに[]を渡す\r\n\r\n    //社員情報全量検索\r\n    function findAllEmp() {\r\n        findAllEmpinfo((data) => {\r\n            //検索成功の場合、stateを更新\r\n            setEmplist(data)\r\n        })\r\n    }\r\n\r\n    //社員情報新規登録\r\n    function insertEmp(obj, callback){\r\n        //実際の登録処理\r\n        insertEmpinfo(obj, ()=>{\r\n            //登録でき次第、すべてのレコードを再検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n                //callback呼び出す\r\n                callback()\r\n            })\r\n        })\r\n    }\r\n\r\n    //社員cmpCdにより、社員情報を検索する\r\n    function findEmpByCmpCd(cmpCd, callback){\r\n        //実際の検索処理\r\n        findByCmpCd(cmpCd, (data)=>{\r\n            //検索結果をcallbackとして返却\r\n            callback(data)\r\n        })\r\n    }\r\n\r\n    //指定された社員情報（obj）を更新する \r\n    function updateEmp(obj, callback){\r\n        //実際の更新処理\r\n        updateEmpinfo(obj, ()=>{\r\n            //すべてのレコードを検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n                //callback呼び出す\r\n                callback()\r\n            })\r\n        })\r\n    }\r\n\r\n    //指定された社員情報を削除する\r\n    function deleteEmp(obj){\r\n        //実際の削除処理\r\n        deleteByCmpCd(obj, ()=>{\r\n            //すべてのレコードを検索する\r\n            findAllEmpinfo((data) => {\r\n                //state更新\r\n                setEmplist(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    //社員番号すでに存在してるかをチェックする\r\n    function doCheckDoubleEmp(cmpCd) {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"doCheckDoubleEmp\")\r\n            //実際の検索処理\r\n            findByCmpCd(cmpCd, (data)=>{\r\n                console.log(\"data.name\" + data.name)\r\n                //検索結果返却\r\n                data.name ? resolve(true) : resolve(false)\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    //ログインユーザのaccountIdにより、ログインユーザを検索する\r\n    //ログイン処理ユーザチェック用\r\n    function findLoginuserByAccId(accId, callback) {\r\n        findByAccId(accId, (data) => {\r\n            //検索結果をcallbackとして返却\r\n            callback(data)\r\n        })\r\n    }\r\n\r\n    //ログインユーザ新規登録処理\r\n    //insert loginuser\r\n    function loginUserRegister(obj, callback) {\r\n        insertLoginuser(obj,() => {\r\n            callback()\r\n        })\r\n    }\r\n    \r\n    return { \r\n        emplist,                  //社員情報リスト\r\n        setEmplist,               //社員情報リストをstateへ更新\r\n        findAllEmp,               //すべての社員情報を検索する\r\n        insertEmp,                //社員を新規登録する\r\n        findEmpByCmpCd,           //社員コードにより、社員情報を検索する\r\n        updateEmp,                //社員情報を更新する\r\n        deleteEmp,                //社員を削除する\r\n        doCheckDoubleEmp,         //新規登録したい社員コードが既に存在しているかをチェック処理\r\n        loginUserRegister,        //ログインユーザを新規登録したい\r\n        findLoginuserByAccId      //ログインユーザＩＤにより、ログインユーザを検索する \r\n    }\r\n}",["64","65"],"E:\\companyERP\\src\\components\\Login.js",["66","67","68","69"],"E:\\companyERP\\src\\components\\MyApp.js",["70","71","72","73"],"E:\\companyERP\\src\\components\\NavBar.js",[],"E:\\companyERP\\src\\components\\List.js",["74","75"],"E:\\companyERP\\src\\components\\RegisterUpdate.js",["76","77","78","79","80","81","82"],"E:\\companyERP\\src\\index.js",[],"E:\\companyERP\\src\\components\\Infomation.js",["83","84"],"E:\\companyERP\\src\\services\\util.js",["85"],"//国マスタ\r\nconst country = [\r\n    {cd: '001', cName: '中国'},\r\n    {cd: '002', cName: '日本'},\r\n    {cd: '003', cName: '韓国'},\r\n]\r\n\r\n//国のcountryCdにより、国名を検索し返却する\r\nfunction getCountryName(countryCd) {\r\n    //検索処理\r\n    let countryTmp = country.find((element) => element.cd == countryCd)\r\n    //検索結果がある場合、国名を返却、それ以外は不明を返却\r\n    return countryTmp ? countryTmp.cName : '不明'\r\n}\r\n\r\n//6桁英数字チェック\r\nfunction doCheck6LetterOrNum(target) {\r\n    var myExpress = \"^[0-9a-zA-Z]{6}$\"; \r\n    var re = new RegExp(myExpress); \r\n    console.log(\"re test\" + re.test(target))\r\n    if (re.test(target)) { \r\n       return true\r\n    }else{ \r\n      return false\r\n    }\r\n}\r\n\r\n//export\r\nexport { \r\n    getCountryName,           //国のcountryCdにより、国名を検索し返却する\r\n    doCheck6LetterOrNum       //6桁英数字チェック \r\n}","E:\\companyERP\\src\\App.js",[],["86","87"],"E:\\companyERP\\src\\services\\empinfoDAO.js",[],"E:\\companyERP\\src\\services\\loginuserDAO.js",[],"E:\\companyERP\\src\\components\\LoginUserRegister.js",["88","89"],"E:\\companyERP\\src\\i18n.js",[],{"ruleId":"90","severity":1,"message":"91","line":13,"column":16,"nodeType":"92","messageId":"93","endLine":13,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":21,"column":7,"nodeType":"96","endLine":21,"endColumn":9,"suggestions":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":28,"column":16,"nodeType":"104","messageId":"105","endLine":28,"endColumn":20},{"ruleId":"90","severity":1,"message":"106","line":72,"column":39,"nodeType":"92","messageId":"93","endLine":72,"endColumn":41},{"ruleId":"90","severity":1,"message":"106","line":100,"column":43,"nodeType":"92","messageId":"93","endLine":100,"endColumn":45},{"ruleId":"90","severity":1,"message":"106","line":102,"column":46,"nodeType":"92","messageId":"93","endLine":102,"endColumn":48},{"ruleId":"90","severity":1,"message":"106","line":79,"column":22,"nodeType":"92","messageId":"93","endLine":79,"endColumn":24},{"ruleId":"90","severity":1,"message":"106","line":81,"column":25,"nodeType":"92","messageId":"93","endLine":81,"endColumn":27},{"ruleId":"90","severity":1,"message":"106","line":88,"column":22,"nodeType":"92","messageId":"93","endLine":88,"endColumn":24},{"ruleId":"90","severity":1,"message":"106","line":90,"column":25,"nodeType":"92","messageId":"93","endLine":90,"endColumn":27},{"ruleId":"102","severity":1,"message":"107","line":2,"column":94,"nodeType":"104","messageId":"105","endLine":2,"endColumn":99},{"ruleId":"90","severity":1,"message":"106","line":50,"column":36,"nodeType":"92","messageId":"93","endLine":50,"endColumn":38},{"ruleId":"102","severity":1,"message":"108","line":3,"column":60,"nodeType":"104","messageId":"105","endLine":3,"endColumn":63},{"ruleId":"102","severity":1,"message":"109","line":6,"column":26,"nodeType":"104","messageId":"105","endLine":6,"endColumn":41},{"ruleId":"102","severity":1,"message":"110","line":6,"column":43,"nodeType":"104","messageId":"105","endLine":6,"endColumn":48},{"ruleId":"94","severity":1,"message":"111","line":81,"column":7,"nodeType":"96","endLine":81,"endColumn":9,"suggestions":"112"},{"ruleId":"90","severity":1,"message":"106","line":121,"column":30,"nodeType":"92","messageId":"93","endLine":121,"endColumn":32},{"ruleId":"90","severity":1,"message":"106","line":234,"column":75,"nodeType":"92","messageId":"93","endLine":234,"endColumn":77},{"ruleId":"90","severity":1,"message":"106","line":240,"column":75,"nodeType":"92","messageId":"93","endLine":240,"endColumn":77},{"ruleId":"94","severity":1,"message":"113","line":37,"column":7,"nodeType":"96","endLine":37,"endColumn":9,"suggestions":"114"},{"ruleId":"90","severity":1,"message":"106","line":59,"column":72,"nodeType":"92","messageId":"93","endLine":59,"endColumn":74},{"ruleId":"90","severity":1,"message":"106","line":11,"column":59,"nodeType":"92","messageId":"93","endLine":11,"endColumn":61},{"ruleId":"98","replacedBy":"115"},{"ruleId":"100","replacedBy":"116"},{"ruleId":"90","severity":1,"message":"106","line":83,"column":31,"nodeType":"92","messageId":"93","endLine":83,"endColumn":33},{"ruleId":"90","severity":1,"message":"106","line":99,"column":33,"nodeType":"92","messageId":"93","endLine":99,"endColumn":35},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'opt'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","'Badge' is defined but never used.","'Col' is defined but never used.","'withTranslation' is defined but never used.","'Trans' is defined but never used.","React Hook useEffect has missing dependencies: 'cmpCd', 'findEmpByCmpCd', and 'setValue'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'cmpCd' and 'findEmpByCmpCd'. Either include them or remove the dependency array.",["121"],["118"],["119"],{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [opt]",{"range":"128","text":"129"},"Update the dependencies array to be: [cmpCd, findEmpByCmpCd, setValue]",{"range":"130","text":"131"},"Update the dependencies array to be: [cmpCd, findEmpByCmpCd]",{"range":"132","text":"133"},[688,690],"[opt]",[2599,2601],"[cmpCd, findEmpByCmpCd, setValue]",[1295,1297],"[cmpCd, findEmpByCmpCd]"]